{"id":"j77K","dependencies":[{"name":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\tsconfig.json","includedInParent":true,"mtime":1627401691037},{"name":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\.babelrc","includedInParent":true,"mtime":1627401691025},{"name":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\package.json","includedInParent":true,"mtime":1628275493700},{"name":"preact","loc":{"line":2,"column":18},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\node_modules\\preact\\dist\\preact.module.js"},{"name":"../scripts/glanceJsBridge","loc":{"line":3,"column":169},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\scripts\\glanceJsBridge.ts"},{"name":"preact/hooks","loc":{"line":4,"column":36},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\node_modules\\preact\\hooks\\dist\\hooks.module.js"},{"name":"./lang_overlay","loc":{"line":5,"column":29},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\lang_overlay.tsx"},{"name":"./nextButton","loc":{"line":6,"column":23},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\nextButton.tsx"},{"name":"./videoContainer","loc":{"line":7,"column":24},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\videoContainer.tsx"},{"name":"../styles/colors","loc":{"line":8,"column":19},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\styles\\colors.ts"},{"name":"goober","loc":{"line":9,"column":20},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\node_modules\\goober\\dist\\goober.esm.js"},{"name":"../assets/languageFiles/videos/default.mp4","loc":{"line":10,"column":23},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\assets\\languageFiles\\videos\\default.mp4"},{"name":"../scripts/constants","loc":{"line":11,"column":45},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\components\\language_input_main.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\language-webpeek\\src\\scripts\\constants.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _preact = require(\"preact\");\n\nvar _glanceJsBridge = require(\"../scripts/glanceJsBridge\");\n\nvar _hooks = require(\"preact/hooks\");\n\nvar _lang_overlay = _interopRequireDefault(require(\"./lang_overlay\"));\n\nvar _nextButton = _interopRequireDefault(require(\"./nextButton\"));\n\nvar _videoContainer = _interopRequireDefault(require(\"./videoContainer\"));\n\nvar _colors = _interopRequireDefault(require(\"../styles/colors\"));\n\nvar _goober = require(\"goober\");\n\nvar _default2 = _interopRequireDefault(require(\"../assets/languageFiles/videos/default.mp4\"));\n\nvar _constants = require(\"../scripts/constants\");\n\nvar _templateObject, _templateObject2;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n// eslint-disable-next-line prettier/prettier\n// import { route } from 'preact-router';\nvar Container = (0, _goober.css)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  background: transparent;\\n  color: \", \";\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\"])), _colors.default.white); // const Container1 = css`\n//   background: transparent;\n//   color: ${colors.white};\n//   display: flex;\n//   height: 200vh;\n//   /* align-items: center;\n//   justify-content: center;   */\n//   overflow-y: scroll;\n//     `;\n\nvar disclaimer = (0, _goober.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    transform: rotate(-90deg);\\n    width: max-content;\\n    height: fit-content;\\n    bottom: 20vh;\\n    left: 8%;\\n    color: rgba(255, 255, 255, 0.4);\\n    z-index: 7;\\n    font-size: 1.5vh;\\n    font-family: sans-serif;\\n    /* letter-spacing: 0.5px; */\\n    font-weight: 300;\\n    transform-origin: bottom left 50px;\\n\"])));\n\nvar SelectLanguages = function SelectLanguages() {\n  var _useState = (0, _hooks.useState)(Date.now()),\n      _useState2 = _slicedToArray(_useState, 2),\n      startTime = _useState2[0],\n      setStartTime = _useState2[1];\n\n  var _useState3 = (0, _hooks.useState)(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lang = _useState4[0],\n      setLang = _useState4[1];\n\n  var _useState5 = (0, _hooks.useState)([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      subscribedLanguages = _useState6[0],\n      setSubscribedLanguages = _useState6[1];\n\n  var _useState7 = (0, _hooks.useState)(\"\".concat(_default2.default)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      videoUrl = _useState8[0],\n      setVideoUrl = _useState8[1];\n\n  var _useState9 = (0, _hooks.useState)(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pause = _useState10[0],\n      setPause = _useState10[1];\n\n  var _useState11 = (0, _hooks.useState)([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      allLanguagesData = _useState12[0],\n      setAllLanguagesData = _useState12[1];\n\n  var webpeekLoadedAnalytics = function webpeekLoadedAnalytics() {\n    var eventType = 'language_webpeek';\n    var extras = {\n      action: 'webpeek_loaded'\n    };\n    console.log('Webpeek Loaded!');\n    (0, _glanceJsBridge.sendCustomAnalytics)({\n      extras: extras,\n      eventType: eventType\n    });\n  };\n\n  var clickedOnNextAnalytics = function clickedOnNextAnalytics() {\n    var eventType = 'language_webpeek';\n    var extras = {\n      action: 'clicked_on_next'\n    };\n    console.log('Clicked on Next!');\n    (0, _glanceJsBridge.sendCustomAnalytics)({\n      extras: extras,\n      eventType: eventType\n    });\n  };\n\n  var totalTimeSpentOnWebpeekAnalytics = function totalTimeSpentOnWebpeekAnalytics(time) {\n    var eventType = 'language_webpeek';\n    var extras = {\n      action: 'time_spent_on_webpeek',\n      time_spent: \"\".concat(time, \" ms\")\n    };\n    (0, _glanceJsBridge.sendCustomAnalytics)({\n      extras: extras,\n      eventType: eventType\n    });\n  };\n\n  (0, _hooks.useEffect)(function () {\n    var subscribedLanguages = (0, _glanceJsBridge.getAllSubscribedLanguages)();\n    console.log('Lang_Webpeek: ', subscribedLanguages);\n    setSubscribedLanguages(subscribedLanguages);\n    webpeekLoadedAnalytics();\n    var LanguageData = JSON.parse((0, _glanceJsBridge.getAllLanguages)()); // [{id:'abc', name:'ABC'}] => {abc:{id: 'abc', name: \"ABC\"}}\n\n    setAllLanguagesData(LanguageData);\n  }, []); //TODO - Need to add dependency array for glancejsbridge Availability\n\n  (0, _hooks.useEffect)(function () {\n    (0, _glanceJsBridge.hideNativeUiElementsOfGlance)(['meatballsIcon', 'likeContainer']); // to hide the native elements\n  }, []);\n\n  var LanguageSubscribedAnalytics = function LanguageSubscribedAnalytics(languageId) {\n    var eventType = 'language_webpeek';\n    var extras = {\n      action: 'language_subscribed',\n      languageId: languageId\n    };\n    (0, _glanceJsBridge.sendCustomAnalytics)({\n      extras: extras,\n      eventType: eventType\n    });\n  };\n\n  var LanguageUnubscribedAnalytics = function LanguageUnubscribedAnalytics(languageId) {\n    var eventType = 'language_webpeek';\n    var extras = {\n      action: 'language_unsubscribed',\n      languageId: languageId\n    };\n    (0, _glanceJsBridge.sendCustomAnalytics)({\n      extras: extras,\n      eventType: eventType\n    });\n  };\n\n  var selectLanguages = function selectLanguages(langId) {\n    var isModifiable = allLanguagesData.filter(function (item) {\n      return langId === item.id;\n    })[0].isSubscriptionModifiable; // const test =\n\n    console.log('allLanguagesData', allLanguagesData);\n    console.log('isModifiable: ', isModifiable);\n    if (!isModifiable) return;\n\n    if (subscribedLanguages.includes(langId)) {\n      (0, _glanceJsBridge.unsubscribeLanguage)(langId); // Unubscribing a language\n\n      LanguageUnubscribedAnalytics(langId); //Analytics for unsubscribed language\n      // const idx = subscribedLanguages.indexOf(langId);\n      // const copiedArray = subscribedLanguages.slice();\n      // copiedArray.splice(idx, 1);\n    } else {\n      (0, _glanceJsBridge.subscribeLanguage)(langId); // SDK js - Subscribing to a new language\n\n      LanguageSubscribedAnalytics(langId); //Analytics for newly subscribed language\n\n      var _videoUrl = _constants.languageDataForImageAndVideo[langId].videoUrl;\n      setVideoUrl(_videoUrl); // setSubscribedLanguages(selectedLanguages => ([...selectedLanguages, langId]));\n\n      var Lang = allLanguagesData.filter(function (item) {\n        return item.id === langId;\n      });\n      setLang(Lang[0].displayName);\n    }\n\n    var updatedLanguageList = (0, _glanceJsBridge.getAllSubscribedLanguages)(); // need to make a fn for the same\n\n    console.log('Updated Language list after unsubscription: ', updatedLanguageList);\n    setSubscribedLanguages(updatedLanguageList);\n  };\n\n  var clickedOnNext = function clickedOnNext() {\n    var endTime = Date.now();\n    var totalTimeSpent = endTime - startTime;\n    console.log('totalTimeSpent: ', totalTimeSpent, 'ms'); // remove the console later\n\n    totalTimeSpentOnWebpeekAnalytics(totalTimeSpent); //Analytics for total time spent on page\n\n    setPause(true);\n    clickedOnNextAnalytics(); //Analytics for clicked on next btn\n\n    (0, _glanceJsBridge.glanceMoveToNext)(); // SDK js function to kove to next glance\n  };\n\n  return (0, _preact.h)(\"div\", {\n    className: Container\n  }, (0, _preact.h)(\"div\", {\n    className: disclaimer\n  }, (0, _preact.h)(\"p\", null, \"Altered video. For Entertainment purposes only. No association with depicted personalities\")), (0, _preact.h)(_videoContainer.default, {\n    video_url: videoUrl,\n    pause: pause\n  }), (0, _preact.h)(_lang_overlay.default, {\n    selectLanguages: selectLanguages,\n    subscribedLanguages: subscribedLanguages,\n    allLanguagesData: allLanguagesData\n  }), (0, _preact.h)(_nextButton.default, {\n    clickedOnNext: clickedOnNext,\n    lang: lang,\n    setLang: setLang\n  }));\n};\n\nvar _default = SelectLanguages;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"1264ecda46a1a1ed8abe80681eac3472","cacheData":{"env":{}}}