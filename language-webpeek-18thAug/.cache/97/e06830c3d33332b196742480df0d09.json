{"id":"pcvB","dependencies":[{"name":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\tsconfig.json","includedInParent":true,"mtime":1627401691037},{"name":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\.babelrc","includedInParent":true,"mtime":1627401691025},{"name":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\package.json","includedInParent":true,"mtime":1628275493700},{"name":"preact","loc":{"line":1,"column":18},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\src\\app.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\node_modules\\preact\\dist\\preact.module.js"},{"name":"./scripts/glanceJsBridge","loc":{"line":2,"column":36},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\src\\app.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\src\\scripts\\glanceJsBridge.ts"},{"name":"preact/hooks","loc":{"line":3,"column":36},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\src\\app.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\node_modules\\preact\\hooks\\dist\\hooks.module.js"},{"name":"./components/language_input_main","loc":{"line":4,"column":30},"parent":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\src\\app.tsx","resolved":"C:\\Users\\Akshay\\OneDrive\\Documents\\GitHub\\GlanceWebpeeks\\user_onboarding\\src\\components\\language_input_main.tsx"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _preact = require(\"preact\");\n\nvar _glanceJsBridge = require(\"./scripts/glanceJsBridge\");\n\nvar _hooks = require(\"preact/hooks\");\n\nvar _language_input_main = _interopRequireDefault(require(\"./components/language_input_main\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// export const CatgData = createContext();\n// const data = JSON.parse(getCategorySubscriptions());\n// console.log(\"Data: \", data)\nvar App = function App() {\n  var _useState = (0, _hooks.useState)('categories'),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentScreen = _useState2[0],\n      setCurrentScreen = _useState2[1];\n\n  (0, _hooks.useEffect)(function () {\n    // const eventType = 'language_webpeek';\n    var eventType = 'category_webpeek';\n    var extras = {\n      action: 'webpeek_network_mode',\n      networkType: window.navigator.onLine ? 'online' : 'offline'\n    };\n    (0, _glanceJsBridge.sendCustomAnalytics)({\n      eventType: eventType,\n      extras: extras\n    });\n  }, []); // if (currentScreen === 'categories') {\n  //   return <Categories setCurrentScreen={setCurrentScreen} />\n  // } else if (currentScreen === 'entertainment') {\n  //   return <MoviesAndTv setCurrentScreen={setCurrentScreen} />\n  // } else if (currentScreen === 'food') {\n  //   return <Food setCurrentScreen={setCurrentScreen} />\n  // } else if (currentScreen === 'news') {\n  //   return <NationalNews setCurrentScreen={setCurrentScreen} />\n  // } else if (currentScreen === 'sports') {\n  //   return <Sports setCurrentScreen={setCurrentScreen} />\n  // } else if (currentScreen === 'confetti') {\n  //   return <Confetti setCurrentScreen={setCurrentScreen} />\n  // } else if (currentScreen === 'selected') {\n  //   return <SelectedCategories />\n  // } else if (currentScreen === 'comedy') {\n  //   return <Comedy setCurrentScreen={setCurrentScreen} />\n  // } else if (currentScreen === 'talent') {\n  //   return <Talent setCurrentScreen={setCurrentScreen} />\n  // }\n  // return <Categories />\n\n  return (0, _preact.h)(_language_input_main.default, null);\n};\n\nvar _default = App;\nexports.default = _default;\n{\n  /* <Screen1 path=\"/\" />\r\n    <Languageinput path=\"/lang\" /> */\n}\n{\n  /* // return < CatgData.Provider value={data} >\r\n  //   <Router>\r\n  //     <LanguageinputComp path=\"/\" />\r\n  //     <Categories path=\"/\" />\r\n  //     <MoviesAndTv path=\"/moviesandtv\" />\r\n  //     <NationalNews path=\"/news\" />\r\n  //     <Sports path=\"/sports\" />\r\n  //     <Food path=\"/food\" />\r\n  //     <SelectedCategories path=\"/selected\" />\r\n  //     <Confetti path=\"/confetti\" />\r\n  //   </Router>\r\n  // </CatgData.Provider> */\n}"},"sourceMaps":null,"error":null,"hash":"bd689973a800fc9d67e3fe0837e094b2","cacheData":{"env":{}}}